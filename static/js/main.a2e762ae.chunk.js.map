{"version":3,"sources":["components/nav/NavBar.js","modules/spotifyAPIManager.js","modules/jsonAPIManager.js","components/quiz/QuizBox.js","components/quiz/QuizHeader.js","components/quiz/Quiz.js","components/home/Home.js","components/authentication/Login.js","components/test/SongFile.js","components/test/UserPlaylists.js","components/test/QuizSongCreator.js","components/test/RadioButtons.js","components/test/QuizCreator.js","components/test/QuizSongEditor.js","components/test/QuizEditor.js","components/test/Create.js","components/authentication/AuthRoute.js","components/profile/Profile.js","modules/spotifyPlayback.js","components/ApplicationViews.js","App.js","index.js"],"names":["NavBar","state","collapseOpen","color","collapseOut","toggleCollapse","document","documentElement","classList","toggle","_this","setState","onCollapseExiting","onCollapseExited","scrollToDownload","getElementById","scrollIntoView","behavior","localLogout","sessionStorage","clear","localStorage","window","addEventListener","this","changeColor","removeEventListener","react_default","a","createElement","Navbar","className","expand","Container","NavbarBrand","to","data-placement","tag","Link","aria-expanded","onClick","index_es","icon","faBars","Collapse","navbar","isOpen","onExiting","onExited","Row","Col","xs","Nav","NavItem","NavLink","href","React","Component","remoteURL","accessToken","OAuth","create","access_token","spotifyAPIManager","get","spotifyAlbumTracks","fetch","concat","headers","Accept","Authorization","Content-Type","then","response","json","data","items","map","track","id","getUserPlaylists","_getUserPlaylists","Object","asyncToGenerator","regenerator_default","mark","_callee","spotifyRequest","playlistResponse","wrap","_context","prev","next","sent","abrupt","t0","console","error","stop","apply","arguments","getPlaylistTracks","_getPlaylistTracks","_callee2","playlistURI","tracks","_context2","_x","spotifyTrackInfo","uri","res","sections","arrayLoudness","section","loudness","startingPoint","findIndex","log","start","firstSections","slice","averageLoudness","reduce","b","length","newPoint","post","toJSONServer","endpoint","objectToPost","method","body","JSON","stringify","e","spotifyNextTrack","put","spotifyShuffle","deviceId","startPlayback","_startPlayback","_callee3","quizTracks","time","_context3","uris","position_ms","_x2","_x3","playOneSong","_playOneSong","_callee4","_context4","_x4","_x5","_x6","pauseSong","_pauseSong","_callee5","_context5","transferPlayback","_transferPlayback","_callee6","_context6","device_ids","play","_x7","localURL","jsonServer","getOneEntry","getAll","postOne","entry","deleteEntry","entryID","patchEntry","editEntry","QuizBox","inputAnswer","correctAnswers","questionIndex","disableButton","disableSubmitButton","handleFieldChange","event","stateToChange","target","value","handleSubmit","index","preventDefault","alert","toLowerCase","correctAnswer","props","name","form","parentNode","includes","reset","playSong","startTime","spotifyAPI","stateToToggle","defineProperty","handleSeek","player","nextTrack","seek","handlePlaySong","setTimeout","pause","clipLength","quizScore","quizId","parseInt","userId","currentUser","score","quizAPI","endQuiz","Jumbotron","Badge","pill","Button","disabled","Form","FormGroup","row","Label","for","sm","Input","type","onChange","placeholder","QuizHeader","quizzes","selectedQuiz","handleStart","selectQuiz","default","quiz","key","quizName","Quiz","offset","startQuiz","quizTrackInfo","quizTrackIds","randomIndex","Math","floor","random","push","splice","quizDescription","QuizHeader_QuizHeader","QuizBox_QuizBox","Home","Quiz_Quiz","Login","handleClick","initialize","popup","cache","done","spotify","me","spotifyUsername","registeredUser","users","find","user","setLoginStatus","setItem","newUser","displayName","userArray","prevProps","userLoggedIn","history","size","bg-color","withRouter","SongFile","addToQuiz","handleDelete","removeFromQuiz","_this$props$track","albumName","artistName","slicedToArray","trackName","UserPlaylists","playlistTracks","_this2","playlist","URI","_this3","_this4","Table","responsive","i","SongFile_SongFile","SliderTool","createSliderWithTooltip","Slider","QuizSongCreator","showSlider","saveButton","alertColor","isPlaying","shouldPause","secondsToMinutes","onSliderChange","onAfterChange","device","saveStartButton","trackInfo","album","artists","duration","duration_ms","addTrackToQuiz","msToMinutes","milliseconds","minutes","seconds","toFixed","numSeconds","msToSeconds","Alert","ListGroupItem","tipFormatter","tipProps","overlayClassName","min","max","step","md","RadioButtons","selectedOption","handleOptionChange","changeClipLength","Fragment","Card","CardBody","check","inline","checked","QuizCreator","newQuizTracks","addTrackToState","submitNewQuiz","newQuiz","clearQuizTracks","hideTracks","CardTitle","CardText","RadioButtons_RadioButtons","ListGroup","QuizSongCreator_QuizSongCreator","QuizSongEditor","QuizEditor","myQuizzes","showEditForm","quizToEdit","addEditedTrack","oldTrackId","newQuizTrack","oldQuizTrack","updatedQuiz","filter","removeTrack","filteredQuiz","submitEditedQuiz","editedQuiz","deleteQuiz","confirm","QuizSongEditor_QuizSongEditor","Create","playlistInfo","dropdownOpen","showTracks","activePlaylist","renderQuizCreator","renderQuizEditor","toggleEditor","trackURI","API","showPlaylist","QuizCreator_QuizCreator","QuizEditor_QuizEditor","Dropdown","DropdownToggle","caret","DropdownMenu","boundItemClick","bind","DropdownItem","UserPlaylists_UserPlaylists","AuthRoute","_ref","path","Destination","superProps","objectWithoutProperties","react_router","exact","render","getItem","assign","Profile","inputName","spotifyPlayback","waitForSpotifyWebPlaybackSDKToLoad","_waitForSpotifyWebPlaybackSDKToLoad","Promise","resolve","Spotify","onSpotifyWebPlaybackSDKReady","sPlayer","_sPlayer","Player","sdk","volume","getOAuthToken","callback","connect","addListener","_ref3","_ref2","device_id","iframe","querySelector","style","display","position","top","left","ApplicationViews","status","playback","_options","authentication_AuthRoute","authentication_Login","App","NavBar_NavBar","components_ApplicationViews","ReactDOM","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.a2e762ae.chunk.js","sourcesContent":["import React from \"react\";\r\n// reactstrap components\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navbar.css\"\r\nimport {\r\n  // Button,\r\n  Collapse,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nexport default class NavBar extends React.Component {\r\n\r\n  state = {\r\n    collapseOpen: false,\r\n    color: \"bg-info\",\r\n    collapseOut: \"\"\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.changeColor);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.changeColor);\r\n  }\r\n  // changeColor = () => {\r\n  //   if (\r\n  //     document.documentElement.scrollTop > 99 ||\r\n  //     document.body.scrollTop > 99\r\n  //   ) {\r\n  //     this.setState({\r\n  //       color: \"bg-info\"\r\n  //     });\r\n  //   } else if (\r\n  //     document.documentElement.scrollTop < 100 ||\r\n  //     document.body.scrollTop < 100\r\n  //   ) {\r\n  //     this.setState({\r\n  //       color: \"navbar-transparent\"\r\n  //     });\r\n  //   }\r\n  // };\r\n  toggleCollapse = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.setState({\r\n      collapseOpen: !this.state.collapseOpen\r\n    });\r\n  };\r\n  onCollapseExiting = () => {\r\n    this.setState({\r\n      collapseOut: \"collapsing-out\"\r\n    });\r\n  };\r\n  onCollapseExited = () => {\r\n    this.setState({\r\n      collapseOut: \"\"\r\n    });\r\n  };\r\n  scrollToDownload = () => {\r\n    document\r\n      .getElementById(\"download-section\")\r\n      .scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  localLogout = () => {\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n       <Navbar\r\n        className={this.state.color}\r\n        // color-on-scroll=\"100\"\r\n        expand=\"lg\"\r\n      >\r\n        <Container>\r\n          <div className=\"navbar-translate\">\r\n            <NavbarBrand\r\n            to=\"/\"\r\n            data-placement=\"bottom\"\r\n            tag={Link}>QuizTime</NavbarBrand>\r\n            <button\r\n              aria-expanded={this.state.collapseOpen}\r\n              className=\"navbar-toggler navbar-toggler\"\r\n              onClick={this.toggleCollapse}\r\n            >\r\n            <FontAwesomeIcon icon={faBars} />\r\n            </button>\r\n          </div>\r\n          <Collapse             \r\n          className={\"justify-content-end \" + this.state.collapseOut}\r\n            navbar\r\n            isOpen={this.state.collapseOpen}\r\n            onExiting={this.onCollapseExiting}\r\n            onExited={this.onCollapseExited}>\r\n                        <div className=\"navbar-collapse-header\">\r\n              <Row>\r\n                <Col className=\"collapse-brand\" xs=\"6\">\r\n                  QuizTime\r\n                </Col>\r\n                <Col className=\"collapse-close text-right\" xs=\"6\">\r\n                  <button\r\n                    aria-expanded={this.state.collapseOpen}\r\n                    className=\"navbar-toggler\"\r\n                    onClick={this.toggleCollapse}\r\n                  >\r\n                   <FontAwesomeIcon icon={faBars} />\r\n                  </button>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n              <Nav navbar>\r\n                <NavItem className=\"active\">\r\n                  <NavLink tag={Link} to=\"/home\">\r\n                    Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/profile\">\r\n                    My Profile\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/create\">\r\n                    Quiz Creator\r\n                  </NavLink>\r\n                </NavItem>\r\n                {/* <NavItem>\r\n                  <NavLink tag={Link} to=\"/quiz\" >\r\n                    Quiz\r\n                  </NavLink>\r\n                </NavItem> */}\r\n                <NavItem>\r\n                  <NavLink href=\"/\" onClick={this.localLogout}>\r\n                Log Out\r\n                </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\n","\r\n\r\n\r\nconst remoteURL = \"https://api.spotify.com/v1\";\r\nconst baseURL = \"https://calm-mesa-57338.herokuapp.com\";\r\n\r\nconst spotifyRequest = window.OAuth.create(\"spotify\");\r\nconst accessToken = spotifyRequest.access_token\r\n\r\n\r\n\r\n\r\nexport default {\r\n  get: {\r\n    spotifyAlbumTracks() {\r\n      return fetch(\r\n        `${remoteURL}/albums/709gu2Yj2tfqmNMIEDfOPg/tracks?market=US&limit=50`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }\r\n      ).then(response => response.json()).then(data => {\r\n\r\n        let tracks = data.items\r\n        let mapTracks = tracks.map(track => track.id)\r\n        return mapTracks\r\n      }\r\n      )\r\n    },\r\n    async getUserPlaylists() {\r\n      const spotifyRequest = window.OAuth.create(\"spotify\");\r\n      const accessToken = spotifyRequest.access_token\r\n      try {\r\n        const playlistResponse = await fetch(\"https://api.spotify.com/v1/me/playlists\", \r\n          {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        })\r\n        let json = await playlistResponse.json(); \r\n           return json.items\r\n      }\r\n      catch(err) {\r\n          //return default array with note that can't download playlists\r\n          console.error(err);\r\n      }\r\n  },\r\n\r\n  async getPlaylistTracks(playlistURI) {\r\n    const spotifyRequest = window.OAuth.create(\"spotify\");\r\n    const accessToken = spotifyRequest.access_token\r\n    try { \r\n      let response = await fetch(`${remoteURL}/playlists/${playlistURI}/tracks?market=US&fields=items(track(id%2Cduration_ms%2Cname%2Curi%2C%20album(name)%2Cartists(name)))&limit=100`,         {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n      let json = await response.json();\r\n      let items = json.items;\r\n      let tracks = items.map(tracks => tracks.track)\r\n      return tracks\r\n  \r\n    } \r\n      catch(err) {\r\n        //return error note.\r\n        console.error(err);\r\n    }\r\n  },\r\n\r\n\r\n    spotifyTrackInfo(uri) {\r\n      const spotifyRequest = window.OAuth.create(\"spotify\");\r\n      const accessToken = spotifyRequest.access_token\r\n      return fetch(`https://api.spotify.com/v1/audio-analysis/${uri}`,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          }\r\n        }).then(res => res.json()).then(data => {\r\n          let sections = data.sections\r\n          let arrayLoudness = sections.map(section => section.loudness);\r\n          let startingPoint = arrayLoudness.findIndex(section => section > -15.5)\r\n          if (startingPoint <= 2 && startingPoint >= 0) {\r\n              console.log([uri, sections[startingPoint].start*1000, 1])\r\n            return (sections[startingPoint].start)\r\n          } else {\r\n            if (arrayLoudness[0] > arrayLoudness[1]) {\r\n              // console.log([uri, 0, 2])\r\n              return 0\r\n            } else {\r\n              let firstSections = arrayLoudness.slice(0, 5);\r\n              let averageLoudness = firstSections.reduce((a, b) => a + b) / firstSections.length;\r\n              let newPoint = sections.findIndex(section => section.loudness > averageLoudness);\r\n              console.log([uri, sections[newPoint].start* 1000, 3])\r\n              return (sections[newPoint].start)\r\n\r\n            }\r\n          }\r\n        })\r\n    }\r\n  },\r\n  post: {\r\n    toJSONServer(endpoint, objectToPost) {\r\n      return fetch(`${baseURL}/${endpoint}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(objectToPost),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      }).then(e => e.json());\r\n\r\n    },\r\n    spotifyNextTrack() {\r\n      fetch(`${remoteURL}/me/player/next`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"POST\"\r\n      })\r\n    }\r\n  },\r\n  put: {\r\n    spotifyShuffle(deviceId) {\r\n      fetch(`${remoteURL}/me/player/shuffle?state=true&device_id=${deviceId}`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"PUT\"\r\n      })\r\n    },\r\n    async startPlayback(quizTracks, time) {\r\n      const spotifyRequest = window.OAuth.create(\"spotify\");\r\n      const accessToken = spotifyRequest.access_token\r\n      try { \r\n        await fetch(`https://api.spotify.com/v1/me/player/play`, {\r\n          body: JSON.stringify({\r\n            \"uris\": quizTracks,\r\n            \"position_ms\": time\r\n          }), \r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          method: \"PUT\"\r\n        })\r\n      } \r\n      catch(err) {\r\n        //return error note.\r\n        console.error(err);\r\n      }\r\n    },\r\n  \r\n  async playOneSong(track, time, deviceId) {\r\n    const spotifyRequest = window.OAuth.create(\"spotify\");\r\n    const accessToken = spotifyRequest.access_token\r\n    try { \r\n      await fetch(`https://api.spotify.com/v1/me/player/play?device_id=${deviceId}`, {\r\n        body: JSON.stringify({\r\n          \"uris\": [track],\r\n          \"position_ms\": time\r\n        }), \r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"PUT\"\r\n      })\r\n    } \r\n    catch(err) {\r\n      //return error note.\r\n      console.error(err);\r\n    }\r\n  },\r\n  async pauseSong() {\r\n    const spotifyRequest = window.OAuth.create(\"spotify\");\r\n    const accessToken = spotifyRequest.access_token\r\n    try { \r\n      await fetch(`https://api.spotify.com/v1/me/player/pause`, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"PUT\"\r\n      })\r\n    } \r\n    catch(err) {\r\n      //return error note.\r\n      console.error(err);\r\n    }\r\n  },\r\n  async transferPlayback(deviceId) {\r\n    const spotifyRequest = window.OAuth.create(\"spotify\");\r\n    const accessToken = spotifyRequest.access_token\r\n    try { \r\n      await fetch(`https://api.spotify.com/v1/me/player/`, {\r\n        body: JSON.stringify({\r\n          \"device_ids\": [\r\n            deviceId\r\n          ],\r\n        \"play\": false\r\n        }), \r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        method: \"PUT\"\r\n      })\r\n    } \r\n    catch(err) {\r\n      //return error note.\r\n      console.error(err);\r\n    }\r\n  }\r\n  \r\n}\r\n}\r\n","const localURL = \"https://calm-mesa-57338.herokuapp.com\";\r\n// const localURL = \"http://localhost:5002\"\r\n\r\n\r\nconst jsonServer = {\r\n  getOneEntry(endpoint, id) {\r\n    return fetch(`${localURL}/${endpoint}/${id}`).then(res => res.json());\r\n  },\r\n  getAll(endpoint) {\r\n    return fetch(`${localURL}/${endpoint}`).then(res => res.json());\r\n  },\r\n  postOne(endpoint, entry) {\r\n    return fetch(`${localURL}/${endpoint}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(entry)\r\n    });\r\n  },\r\n  deleteEntry(endpoint, entryID) {\r\n    return fetch(`${localURL}/${endpoint}/${entryID}`, {\r\n      method: \"DELETE\"\r\n    }).then(res => res.json());\r\n  },\r\n  patchEntry(endpoint, entryID, entry){\r\n    return fetch(`${localURL}/${endpoint}/${entryID}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(entry)\r\n    })\r\n  },\r\n  editEntry(endpoint, entryID, entry){\r\n    return fetch(`${localURL}/${endpoint}/${entryID}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(entry)\r\n    })\r\n  }\r\n};\r\n\r\nexport default jsonServer\r\n\r\n","import React, { Component } from \"react\";\r\n// reactstrap components\r\nimport {\r\n  Jumbotron,\r\n  Button,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Label,\r\n  Col,\r\n  Badge\r\n} from \"reactstrap\";\r\nimport \"./quiz.css\";\r\nimport spotifyAPI from \"../../modules/spotifyAPIManager\";\r\nimport quizAPI from \"../../modules/jsonAPIManager\";\r\n\r\n\r\nexport default class QuizBox extends Component {\r\n  state = {\r\n    inputAnswer: \"\",\r\n    correctAnswers: 0,\r\n    questionIndex: 0,\r\n    disableButton: false,\r\n    disableSubmitButton: true,\r\n  };\r\n\r\n  // handle the field change when the input box is edited\r\n  handleFieldChange = event => {\r\n    const stateToChange = {};\r\n    stateToChange[event.target.id] = event.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const index = this.state.questionIndex;\r\n    event.preventDefault();\r\n    if (this.state.inputAnswer === \"\") {\r\n      alert(\"Please enter an answer!\");\r\n    } else {\r\n      this.toggle(\"disableButton\");\r\n      this.toggle(\"disableSubmitButton\");\r\n      let inputAnswer = this.state.inputAnswer.toLowerCase();\r\n      let correctAnswer = this.props.quizTracks[index].name.toLowerCase();\r\n      let form = event.target.parentNode;\r\n      if (correctAnswer.includes(inputAnswer) && inputAnswer.length >= 3) {\r\n        alert(`Correct, the answer is ${this.props.quizTracks[index].name}`);\r\n        form.reset();\r\n        this.setState({\r\n          questionIndex: this.state.questionIndex + 1,\r\n          correctAnswers: this.state.correctAnswers + 1\r\n        });\r\n      } else {\r\n        alert(\r\n          `Sorry, the correct answer is ${this.props.quizTracks[index].name}`\r\n        );\r\n        this.setState({ questionIndex: this.state.questionIndex + 1 });\r\n        form.reset();\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.questionIndex === this.props.quizTracks.length) {\r\n      let quizScore = {\r\n        quizId: parseInt(this.props.quizId),\r\n        userId: parseInt(this.props.currentUser),\r\n        score: (this.state.correctAnswers*100/this.props.quizTracks.length) \r\n      }\r\n      quizAPI.postOne(\"quizLogs\", quizScore)\r\n      alert(`Quiz Complete! You answered ${this.state.correctAnswers} out of ${this.props.quizTracks.length} questions correctly. `)\r\n      this.props.endQuiz();\r\n    }\r\n  }\r\n\r\n  playSong = () => {\r\n    const uris = this.props.quizTracks.map(track => track.uri)\r\n    const startTime = this.props.quizTracks[0].startTime;\r\n    spotifyAPI.put.startPlayback(uris, startTime, this.props.deviceId);\r\n  };\r\n\r\n  toggle = stateToToggle => {\r\n    this.setState({\r\n      [stateToToggle]: !this.state[stateToToggle]\r\n    });\r\n  };\r\n\r\n\r\n  handleSeek = () => {\r\n    const startTime = this.props.quizTracks[this.state.questionIndex].startTime;\r\n    this.props.player.nextTrack().then(()=> {\r\n      this.props.player.seek(startTime);\r\n    });\r\n  }\r\n\r\n  // handleStop = () => {\r\n  //   this.props.player.pause();\r\n  //   };\r\n\r\n\r\n\r\n\r\n  handlePlaySong = () => {\r\n    if (this.state.questionIndex === 0) {\r\n    this.playSong();\r\n    } else {\r\n      this.handleSeek()\r\n    }\r\n    this.toggle(\"disableButton\");\r\n    setTimeout(() => {\r\n      this.props.player.pause();\r\n      this.toggle(\"disableSubmitButton\");\r\n    }, this.props.clipLength);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Jumbotron>\r\n          <h2 className=\"display-4\">Quiz Time</h2>\r\n          <p className=\"lead\">Click the play button to test your skills!</p>\r\n          <Badge color=\"primary\" pill>\r\n            Question {this.state.questionIndex + 1} of{\" \"}\r\n            {this.props.quizTracks.length}\r\n          </Badge>\r\n          <Badge color=\"primary\" pill>\r\n            Current Score: {this.state.correctAnswers}\r\n          </Badge>\r\n\r\n          <hr className=\"my-2\" />\r\n          <Button\r\n            onClick={this.handlePlaySong}\r\n            disabled={this.state.disableButton}\r\n          >\r\n            Play song!\r\n          </Button>\r\n\r\n          <Form>\r\n            <FormGroup row>\r\n              <Label for=\"inputAnswer\" sm={3}>\r\n                What song is this?\r\n              </Label>\r\n              <Col sm={9}>\r\n                <Input\r\n                  type=\"text\"\r\n                  onChange={this.handleFieldChange}\r\n                  name=\"text\"\r\n                  id=\"inputAnswer\"\r\n                  placeholder=\"Enter your guess!\"\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n            <Button\r\n              onClick={this.handleSubmit}\r\n              disabled={this.state.disableSubmitButton}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Jumbotron>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n// reactstrap components\r\nimport {\r\n\r\n  Button,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Container,\r\n  Label\r\n} from \"reactstrap\";\r\nimport \"./quiz.css\"\r\nimport quizAPI from \"../../modules/jsonAPIManager\"\r\n\r\n\r\nexport default class QuizHeader extends Component {\r\n\r\nstate = {\r\n  quizzes: [],\r\n  selectedQuiz: 1\r\n}\r\n\r\nasync componentDidMount() {\r\n let response = await quizAPI.getAll(\"quizs\");\r\n this.setState({quizzes: response})\r\n}\r\n\r\nhandleFieldChange = event => {\r\n  const stateToChange = {}\r\n  stateToChange[event.target.id] = event.target.value\r\n  this.setState(stateToChange)\r\n}\r\n\r\nhandleStart = (e) => {\r\n  e.preventDefault();\r\n  this.props.selectQuiz(this.state.selectedQuiz)\r\n}\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n          <div className=\"App\">\r\n            <div>\r\n              <h2> Lets play a quiz! </h2>\r\n            </div>\r\n          </div>\r\n          <Form >\r\n          <FormGroup row>\r\n          <Label for=\"selectedQuiz\">Select Quiz</Label>\r\n          <Input type=\"select\" name=\"select\" id=\"selectedQuiz\" onChange={this.handleFieldChange} default=\"1\">\r\n            {this.state.quizzes.map(quiz => {\r\n      return (<option className=\"option-text\" value={quiz.id} key={quiz.id}>{quiz.quizName}</option>)\r\n    })}\r\n          </Input>\r\n          </FormGroup>\r\n          <Button onClick={this.handleStart}>Click Me to Start the Quiz!\r\n            </Button>\r\n        </Form>\r\n\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport spotifyAPI from \"../../modules/spotifyAPIManager\";\r\nimport QuizBox from \"../quiz/QuizBox\";\r\nimport quizAPI from \"../../modules/jsonAPIManager\";\r\nimport QuizHeader from \"./QuizHeader\";\r\n\r\nexport default class Quiz extends Component {\r\n  state = {\r\n    quizTracks: [],\r\n    offset: 0,\r\n    startQuiz: false,\r\n    clipLength: \"\"\r\n  };\r\n\r\n  selectQuiz = quizId => {\r\n    quizAPI.getOneEntry(\"quizs\", quizId).then(quiz => {\r\n      let quizTrackInfo = quiz.quizTrackIds;\r\n      let quizTracks = [];\r\n      while (quizTrackInfo.length !== 0) {\r\n        let randomIndex = Math.floor(Math.random() * quizTrackInfo.length);\r\n        quizTracks.push(quizTrackInfo[randomIndex]);\r\n        quizTrackInfo.splice(randomIndex, 1);\r\n      }\r\n      \r\n      this.setState({ quizTracks: quizTracks, startQuiz: true, quizDescription: quiz.quizDescription, clipLength: quiz.clipLength, quizName: quiz.quizName, quizId: quizId });\r\n    });\r\n  };\r\n\r\n  endQuiz = () => {\r\n    this.setState({ startQuiz: false, quizTracks: [] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className=\"App\">\r\n          {!this.state.startQuiz && <QuizHeader selectQuiz={this.selectQuiz} />}\r\n\r\n          {this.state.startQuiz && (\r\n            <QuizBox\r\n              endQuiz={this.endQuiz}\r\n              quizTracks={this.state.quizTracks}\r\n              deviceId={this.props.deviceId}\r\n              player={this.props.player}\r\n              clipLength={this.state.clipLength}\r\n              currentUser={this.props.currentUser}\r\n              quizId={this.state.quizId}\r\n            />\r\n          )}\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { Container, Button } from \"reactstrap\"\r\nimport Quiz from \"../quiz/Quiz\"\r\n\r\nexport default class Home extends Component {\r\n\r\n\r\n  render() {\r\n      return (\r\n        <Container>\r\n          <div className=\"App\">\r\n          <h2> Hey bro...what song is this? </h2>\r\n            <div>\r\n              <Quiz          \r\n               access_token={this.props.access_token}\r\n              deviceId={this.props.deviceId}\r\n              player={this.props.player}\r\n              currentUser={this.props.currentUser}>\r\n              </Quiz>\r\n            </div>\r\n          </div>\r\n        \r\n        </Container>\r\n      )\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { Button, Container } from \"reactstrap\";\r\nimport \"./login.css\";\r\nimport quizAPI from \"../../modules/jsonAPIManager\";\r\n\r\nclass Login extends Component {\r\n  handleClick = e => {\r\n    // Prevents page reload\r\n    e.preventDefault();\r\n\r\n    // Initializes OAuth.io with API key\r\n    window.OAuth.initialize(\"rKtNmq0HtvZws6tMLOJFcXiyypo\");\r\n    //uses OAuth.io to authenticate user and stores token needed for API calls.\r\n    window.OAuth.popup(\"spotify\", { cache: true }).done(spotify => {\r\n      console.log(\"loggedIn\");\r\n      spotify.me().done(data => {\r\n        let spotifyUsername = data.name;\r\n        let registeredUser = this.props.users.find(\r\n          user => user.spotifyUsername === spotifyUsername\r\n        );\r\n        if (registeredUser) {\r\n          this.props.setLoginStatus(true, registeredUser.id);\r\n          sessionStorage.setItem(\"currentUser\", registeredUser.id);\r\n        } else {\r\n          let newUser = {\r\n            spotifyUsername: spotifyUsername,\r\n            displayName: spotifyUsername\r\n          };\r\n          quizAPI.postOne(\"users\", newUser).then(() => {\r\n            quizAPI.getAll(\"users\").then(userArray => {\r\n              let registeredUser = userArray.find(\r\n                user => user.spotifyUsername === spotifyUsername\r\n              );\r\n              sessionStorage.setItem(\"currentUser\", registeredUser.id);\r\n              this.props.setLoginStatus(true, registeredUser.id);\r\n            });\r\n          });\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.userLoggedIn !== this.props.userLoggedIn) {\r\n      this.props.history.push(\"/home\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h1>Welcome to Common Ground</h1>\r\n        <h3>Please log in to continue</h3>\r\n        <Button onClick={this.handleClick} size=\"lg\" bg-color=\"primary\">\r\n          <span className=\"fa fa-spotify\" /> Sign in with Spotify\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);\r\n","import React, { Component } from \"react\";\r\n// import spotifyAPIManager from \"../../modules/spotifyAPIManager\"\r\nimport { Button } from 'reactstrap'\r\n\r\nexport default class SongFile extends Component {\r\n\r\nstate = {\r\n  disableButton: false\r\n}\r\n\r\nhandleClick = (event) => {\r\n  this.setState({disableButton: true})\r\n  this.props.addToQuiz(this.props.track)\r\n}\r\n\r\nhandleDelete = (event) => {\r\n  this.setState({disableButton: false})\r\n  this.props.removeFromQuiz(this.props.track)\r\n}\r\n\r\nrender() {\r\n  const  {\r\n        \"album\": {\r\n            \"name\": albumName\r\n                  },\r\n    \"artists\": [\r\n          {\r\n          \"name\": artistName\r\n          }],\r\n    \"name\": trackName,\r\n    } = this.props.track\r\n\r\n  return (\r\n            <tr>\r\n            <td className=\"text-center\">{this.props.index}</td>\r\n            <td>{trackName}</td>\r\n            <td>{artistName}</td>\r\n            <td className=\"text-center\">{albumName}</td>\r\n\r\n            <td className=\"text-right\">\r\n                <Button disabled={this.state.disableButton} onClick={this.handleClick} className=\"btn-icon\" color=\"success\" size=\"sm\">\r\n                    <i className=\"tim-icons icon-alert-circle-exc\"></i>\r\n                </Button>{` `}\r\n                <Button onClick={this.handleDelete} disabled={!this.state.disableButton} className=\"btn-icon\" color=\"danger\" size=\"sm\">\r\n                    <i className=\"tim-icons icon-simple-delete\" />\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n  )}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport spotifyAPIManager from \"../../modules/spotifyAPIManager\"\r\nimport { Table, Button } from 'reactstrap'\r\nimport SongFile from \"./SongFile\"\r\n\r\n\r\nexport default class UserPlaylists extends Component {\r\n\r\nstate = {\r\n  playlistTracks: []\r\n}\r\n\r\n  componentDidMount() {\r\n    spotifyAPIManager.get.getPlaylistTracks(this.props.playlist.URI).then(tracks => {\r\n      this.setState({playlistTracks: tracks})\r\n    }\r\n    )}\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.playlist !== this.props.playlist) {\r\n      spotifyAPIManager.get.getPlaylistTracks(this.props.playlist.URI).then(tracks => {\r\n        this.setState({playlistTracks: tracks})\r\n      }\r\n      )\r\n    }\r\n  }  \r\n\r\n  handleClick = () => {\r\n    this.props.addToQuiz(this.state.playlistTracks)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n      <h2>{this.props.playlist.name}</h2> <Button onClick={this.handleClick}>Add all songs</Button>\r\n          <Table responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"text-center\">#</th>\r\n                    <th>Name</th>\r\n                    <th>Artist</th>\r\n                    <th className=\"text-center\">Album</th>\r\n                  \r\n                    <th className=\"text-right\">Add or remove tracks</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.playlistTracks.map((track, i) => {\r\n              return <SongFile key={track.id} index={i+1} track={track} addToQuiz={this.props.addToQuiz} removeFromQuiz={this.props.removeFromQuiz}></SongFile>\r\n            })}\r\n            </tbody>\r\n              </Table>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Alert, Row, Col, ListGroupItem, Button } from \"reactstrap\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\n\r\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\r\n\r\nimport spotifyAPI from \"../../modules/spotifyAPIManager\";\r\n\r\nconst SliderTool = createSliderWithTooltip(Slider);\r\n\r\nexport default class QuizSongCreator extends Component {\r\n  state = {\r\n    value: 0,\r\n    showSlider: true,\r\n    saveButton: true,\r\n    alertColor: \"danger\",\r\n    isPlaying: false,\r\n    shouldPause: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    spotifyAPI.get.spotifyTrackInfo(this.props.track.id).then(value => {\r\n      this.setState({ value: value });\r\n    });\r\n  }\r\n\r\n  log = value => {\r\n    return this.secondsToMinutes(value); //eslint-disable-line\r\n  };\r\n\r\n  onSliderChange = value => {\r\n    this.setState({ value: value });\r\n  };\r\n\r\n  onAfterChange = value => {\r\n    let device = this.props.deviceId;\r\n    console.log(value);\r\n    if (!this.state.isPlaying) {\r\n      this.setState({ isPlaying: true, shouldPause: true });\r\n      spotifyAPI.put\r\n        .playOneSong(this.props.track.uri, this.state.value * 1000, device)\r\n        .then(\r\n          setTimeout(() => {\r\n            if (this.state.shouldPause) {\r\n              this.setState({ isPlaying: false, shouldPause: false });\r\n              spotifyAPI.put.pauseSong();\r\n            }\r\n          }, this.props.clipLength)\r\n        );\r\n    } else {\r\n      this.setState({ isPlaying: false, shouldPause: false });\r\n      spotifyAPI.put\r\n        .playOneSong(this.props.track.uri, this.state.value * 1000, device)\r\n        .then(\r\n          setTimeout(() => {\r\n            if (!this.state.shouldPause) {\r\n              spotifyAPI.put.pauseSong();\r\n            }\r\n          }, this.props.clipLength)\r\n        );\r\n    }\r\n  };\r\n\r\n  saveStartButton = () => {\r\n    const trackInfo = {\r\n      album: this.props.track.album.name,\r\n      artists: this.props.track.artists[0].name,\r\n      id: this.props.track.id,\r\n      name: this.props.track.name,\r\n      startTime: this.state.value*1000,\r\n      uri: this.props.track.uri,\r\n      duration: this.props.track.duration_ms\r\n    };\r\n    this.props.addTrackToQuiz(trackInfo);\r\n    this.setState({\r\n      showSlider: !this.state.showSlider,\r\n      saveButton: !this.state.saveButton,\r\n      alertColor: \"success\"\r\n    });\r\n  };\r\n\r\n  msToMinutes = milliseconds => {\r\n    const minutes = Math.floor(milliseconds / 60000);\r\n    const seconds = ((milliseconds % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n  secondsToMinutes = numSeconds => {\r\n    const minutes = Math.floor(numSeconds / 60);\r\n    const seconds = (numSeconds % 60).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n\r\n  msToSeconds = milliseconds => {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    return seconds;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Alert color={this.state.alertColor}>\r\n        <ListGroupItem>\r\n          {this.state.showSlider && (\r\n            <Row>\r\n              <Col xs=\"1\">0</Col>\r\n              <Col>\r\n                <SliderTool\r\n                  tipFormatter={this.log}\r\n                  tipProps={{ overlayClassName: \"foo\" }}\r\n                  value={this.state.value}\r\n                  min={0}\r\n                  max={this.msToSeconds(this.props.track.duration_ms)}\r\n                  step={1}\r\n                  onChange={this.onSliderChange}\r\n                  onAfterChange={this.onAfterChange}\r\n                />\r\n              </Col>\r\n              <Col sm=\"2\" md=\"1\">\r\n                {this.msToMinutes(this.props.track.duration_ms)}\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          <Row className=\"song-name\">\r\n            <Col xs=\"8\" md=\"6\">\r\n              {this.props.track.name} - {this.props.track.album.name}\r\n            </Col>\r\n            {this.state.saveButton && (\r\n              <Col xs=\"6\" md=\"4\">\r\n                <Button onClick={this.saveStartButton}>\r\n                  {\" \"}\r\n                  Save this start value{\" \"}\r\n                </Button>{\" \"}\r\n              </Col>\r\n            )}\r\n            {!this.state.saveButton && (\r\n              <Col xs=\"6\" md=\"4\">\r\n                <Button onClick={this.saveStartButton}>\r\n                  {\" \"}\r\n                  Edit this value{\" \"}\r\n                </Button>{\" \"}\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </ListGroupItem>\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardBody\r\n} from \"reactstrap\";\r\n\r\nexport default class RadioButtons extends Component {\r\n\r\n\r\n  state= {\r\n    selectedOption: 12000\r\n  }\r\n\r\n\r\n  handleOptionChange = event => {\r\n    const clipLength = parseInt(event.target.value)\r\n    this.setState({\r\n      selectedOption: clipLength\r\n    });\r\n    this.props.changeClipLength(clipLength)\r\n  };\r\n\r\n\r\n  render() {\r\n  return (\r\n    <>\r\n    \r\n      <Card>\r\n      \r\n        <CardBody>\r\n        <FormGroup tag=\"fieldset\">\r\n          <legend className=\"col-form-label\">Select the clip length for your quiz:</legend>\r\n          <FormGroup check inline className=\"form-check-radio\">\r\n            <Label className=\"form-check-label\">\r\n                <Input type=\"radio\" name=\"clipLength\" id=\"clipLength1\" value={6000} checked={this.state.selectedOption === 6000} onChange={this.handleOptionChange}/>\r\n                6 Seconds\r\n                <span className=\"form-check-sign\"></span>\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check inline className=\"form-check-radio\">\r\n            <Label className=\"form-check-label\">\r\n              <Input type=\"radio\" name=\"clipLength\" id=\"clipLength2\" value={12000} checked={this.state.selectedOption === 12000} onChange={this.handleOptionChange}/>\r\n              12 Seconds\r\n              <span className=\"form-check-sign\"></span>\r\n            </Label>\r\n          </FormGroup>\r\n          <FormGroup check inline className=\"form-check-radio\">\r\n            <Label className=\"form-check-label\">\r\n              <Input type=\"radio\" name=\"clipLength\" id=\"clipLength3\" value={24000} checked={this.state.selectedOption === 24000} onChange={this.handleOptionChange}/>\r\n              24 Seconds\r\n              <span className=\"form-check-sign\"></span>\r\n            </Label>\r\n          </FormGroup>\r\n          </FormGroup>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\n}","import React, { Component } from \"react\";\r\n// import API from \"../../modules/spotifyAPIManager\";\r\nimport quizAPI from \"../../modules/jsonAPIManager\";\r\nimport \"./test.css\";\r\nimport {\r\n  Button,\r\n  ListGroup,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Row,\r\n  Form,\r\n  Col\r\n} from \"reactstrap\";\r\nimport QuizSongCreator from \"./QuizSongCreator\";\r\nimport RadioButtons from \"./RadioButtons\";\r\n\r\nexport default class QuizCreator extends Component {\r\n  state = {\r\n    quizName: \"\",\r\n    quizDescription: \"\",\r\n    clipLength: 12000,\r\n    newQuizTracks: [],\r\n    currentUser: 1\r\n  };\r\n\r\n  handleFieldChange = event => {\r\n    const stateToChange = {};\r\n    stateToChange[event.target.id] = event.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  addTrackToQuiz = trackInfo => {\r\n    const addTrackToState = this.state.newQuizTracks.concat(trackInfo);\r\n    this.setState({ newQuizTracks: addTrackToState });\r\n  };\r\n\r\n  submitNewQuiz = event => {\r\n    event.preventDefault();\r\n    if (this.state.quizName === \"\") {\r\n      alert(\"Please enter a name for your quiz\");\r\n    } else if (this.state.newQuizTracks.length < 6) {\r\n      alert(\"Add more songs to your quiz\");\r\n    } else {\r\n      const newQuiz = {\r\n        userId: 1,\r\n        quizName: this.state.quizName,\r\n        quizDescription: this.state.quizDescription,\r\n        quizTrackIds: this.state.newQuizTracks,\r\n        clipLength: this.state.clipLength\r\n      };\r\n      // add the new article\r\n      quizAPI.postOne(\"quizs\", newQuiz);\r\n      alert(`${this.state.quizName} has been created!`);\r\n      this.props.clearQuizTracks();\r\n      let form = event.target.parentNode;\r\n      form.reset();\r\n      this.props.hideTracks();\r\n    }\r\n  };\r\n\r\n  changeClipLength = value => {\r\n    this.setState({ clipLength: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Card>\r\n        <CardTitle tag=\"h3\">Quiz Creator</CardTitle>\r\n\r\n        <CardBody>\r\n          <Row>\r\n            <Col sm=\"12\" md={{ size: 10, offset: 1 }}>\r\n              <CardText>\r\n                The quiz creator allows you to import any song off of Spotify\r\n                into your quiz. The easiest way to add songs is to create a\r\n                playlist on Spotify, then add the entire playlist at once by\r\n                clicking the \"Add All\" button below. You can change the\r\n                difficulty of the quiz by making the song clips 6, 12, or 24\r\n                seconds long. You can use the slider next to each track to\r\n                adjust the starting time for each song, or leave it as is to\r\n                have the song start at the beginning.{\" \"}\r\n              </CardText>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Form>\r\n            <Row form>\r\n              <Col md={4}>\r\n                <FormGroup>\r\n                  <Label for=\"quizName\">Quiz Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"quizName\"\r\n                    id=\"quizName\"\r\n                    placeholder=\"New Quiz\"\r\n                    onChange={this.handleFieldChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={7}>\r\n                <FormGroup>\r\n                  <Label for=\"quizDescription\">Quiz Description</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"text\"\r\n                    id=\"quizDescription\"\r\n                    onChange={this.handleFieldChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <RadioButtons changeClipLength={this.changeClipLength} />\r\n            </Row>\r\n            <FormGroup>\r\n              <Label for=\"quizSongs\">Quiz Songs:</Label>\r\n              <ListGroup id=\"quizSongs\">\r\n                {this.props.quizTracks.map(track => {\r\n                  return (\r\n                    <QuizSongCreator\r\n                      key={track.id}\r\n                      track={track}\r\n                      clipLength={this.state.clipLength}\r\n                      addTrackToQuiz={this.addTrackToQuiz}\r\n                      deviceId={this.props.deviceId}\r\n                    />\r\n                  );\r\n                })}\r\n              </ListGroup>\r\n            </FormGroup>\r\n\r\n            <Button onClick={this.submitNewQuiz}>Submit New Quiz</Button>\r\n          </Form>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Alert, Row, Col, ListGroupItem, Button, Badge } from \"reactstrap\";\r\nimport \"rc-slider/assets/index.css\";\r\nimport \"rc-tooltip/assets/bootstrap.css\";\r\n\r\nimport Slider, { createSliderWithTooltip } from \"rc-slider\";\r\n\r\nimport spotifyAPI from \"../../modules/spotifyAPIManager\";\r\n\r\nconst SliderTool = createSliderWithTooltip(Slider);\r\n\r\nexport default class QuizSongEditor extends Component {\r\n  state = {\r\n    value: 0,\r\n    showSlider: false,\r\n    saveButton: false,\r\n    alertColor: \"success\",\r\n    isPlaying: false,\r\n    shouldPause: false,\r\n\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   let startTime = this.props.startTime\r\n  //     this.setState({value: startTime})\r\n  //   }\r\n  \r\n\r\n  // log = value => {\r\n  //   return this.secondsToMinutes(value); //eslint-disable-line\r\n  // };\r\n\r\n  // time() {this.secondsToMinutes(this.state.value);}\r\n\r\n  // onSliderChange = value => {\r\n  //   this.setState({ value: value });\r\n  // };\r\n\r\n  // onAfterChange = value => {\r\n  //   let device = this.props.deviceId\r\n  //   console.log(value);\r\n  //   if (!this.state.isPlaying) {\r\n  //     this.setState({ isPlaying: true, shouldPause: true });\r\n  //     spotifyAPI.put\r\n  //       .playOneSong(this.props.track.uri, this.state.value * 1000, device)\r\n  //       .then(\r\n  //         setTimeout(() => {\r\n  //           if (this.state.shouldPause) {\r\n  //             this.setState({ isPlaying: false, shouldPause: false });\r\n  //             spotifyAPI.put.pauseSong();\r\n  //           }\r\n  //         }, this.props.clipLength * 1000)\r\n  //       );\r\n  //   } else {\r\n  //     this.setState({ isPlaying: false, shouldPause: false });\r\n  //     spotifyAPI.put\r\n  //       .playOneSong(this.props.track.uri, this.state.value * 1000, device)\r\n  //       .then(\r\n  //         setTimeout(() => {\r\n  //           if (!this.state.shouldPause) {\r\n  //             spotifyAPI.put.pauseSong();\r\n  //           }\r\n  //         }, this.props.clipLength * 1000)\r\n  //       );\r\n  //   }\r\n  // };\r\n\r\n\r\n  // editTrackButton = () => {\r\n  //   this.setState({\r\n  //     showSlider: !this.state.showSlider,\r\n  //     saveButton: !this.state.saveButton,\r\n  //     alertColor: \"danger\"\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n\r\n  msToMinutes = milliseconds => {\r\n    const minutes = Math.floor(milliseconds / 60000);\r\n    const seconds = ((milliseconds % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n  secondsToMinutes = numSeconds => {\r\n    const minutes = Math.floor(numSeconds / 60);\r\n    const seconds = (numSeconds % 60).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n\r\n  msToSeconds = milliseconds => {\r\n    const seconds = Math.floor(milliseconds / 1000);\r\n    return seconds;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Alert color={this.state.alertColor}>\r\n        <ListGroupItem>\r\n\r\n          <Row className=\"song-name\">\r\n            <Col xs=\"8\" md=\"6\">\r\n              {this.props.track.name} - {this.props.track.album}\r\n            </Col>\r\n\r\n            {!this.state.saveButton && (\r\n              <Col xs=\"6\" md=\"4\">\r\n                <Button>\r\n                  {\" \"}\r\n                  Edit this value{\" \"}\r\n                </Button>{\" \"}\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </ListGroupItem>\r\n      </Alert>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\n// import API from \"../../modules/spotifyAPIManager\";\r\nimport quizAPI from \"../../modules/jsonAPIManager\";\r\nimport \"./test.css\";\r\nimport {\r\n  Button,\r\n  ListGroup,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Container,\r\n  Row,\r\n  Form,\r\n  Col\r\n} from \"reactstrap\";\r\nimport QuizSongCreator from \"./QuizSongCreator\";\r\nimport RadioButtons from \"./RadioButtons\";\r\nimport QuizSongEditor from \"./QuizSongEditor\";\r\n\r\nexport default class QuizEditor extends Component {\r\n  state = {\r\n    quizName: \"\",\r\n    quizDescription: \"\",\r\n    clipLength: 12000,\r\n    newQuizTracks: [],\r\n    myQuizzes: [],\r\n    showEditForm: false,\r\n    selectedQuiz: 1\r\n  };\r\n\r\n  async componentDidMount() {\r\n    let response = await quizAPI.getAll(\r\n      `quizs?userId=${this.props.currentUser}`\r\n    );\r\n    this.setState({ myQuizzes: response });\r\n  }\r\n\r\n  showEditForm = () => {\r\n    let quizToEdit = this.state.myQuizzes.find(\r\n      quiz => quiz.id == this.state.selectedQuiz\r\n    );\r\n    this.setState({\r\n      quizName: quizToEdit.quizName,\r\n      quizDescription: quizToEdit.quizDescription,\r\n      clipLength: quizToEdit.clipLength,\r\n      newQuizTracks: quizToEdit.quizTrackIds,\r\n      showEditForm: true\r\n    });\r\n  };\r\n\r\n  handleFieldChange = event => {\r\n    const stateToChange = {};\r\n    stateToChange[event.target.id] = event.target.value;\r\n    this.setState(stateToChange);\r\n  };\r\n\r\n  addTrackToQuiz = trackInfo => {\r\n    const addTrackToState = this.state.newQuizTracks.concat(trackInfo);\r\n    this.setState({ newQuizTracks: addTrackToState });\r\n  };\r\n\r\n  addEditedTrack = (oldTrackId, newQuizTrack) => {\r\n    let oldQuizTrack = this.state.newQuizTracks.find(\r\n      quiz => quiz.id === oldTrackId\r\n    );\r\n    const filteredQuiz = this.state.newQuizTracks.filter(quiz => {\r\n      return quiz !== oldQuizTrack;\r\n    });\r\n    let updatedQuiz = filteredQuiz.concat(newQuizTrack);\r\n    this.setState({ newQuizTracks: updatedQuiz });\r\n  };\r\n\r\n  removeTrack = oldTrackId => {\r\n    let oldQuizTrack = this.state.newQuizTracks.find(\r\n      quiz => quiz.id === oldTrackId\r\n    );\r\n    const filteredQuiz = this.state.newQuizTracks.filter(quiz => {\r\n      return quiz !== oldQuizTrack;\r\n    });\r\n    this.setState({ newQuizTracks: filteredQuiz });\r\n  };\r\n\r\n  submitEditedQuiz = event => {\r\n    event.preventDefault();\r\n    if (this.state.quizName === \"\") {\r\n      alert(\"Please enter a name for your quiz\");\r\n    } else if (this.state.newQuizTracks.length < 6) {\r\n      alert(\"Add more songs to your quiz\");\r\n    } else {\r\n      const editedQuiz = {\r\n        quizName: this.state.quizName,\r\n        quizDescription: this.state.quizDescription,\r\n        quizTrackIds: this.state.newQuizTracks,\r\n        clipLength: this.state.clipLength\r\n      };\r\n      // add the new article\r\n      quizAPI.patchEntry(\"quizs\", this.state.selectedQuiz, editedQuiz);\r\n      alert(`${this.state.quizName} has been edited!`);\r\n      this.props.clearQuizTracks();\r\n      let form = event.target.parentNode;\r\n      form.reset();\r\n      this.props.hideTracks();\r\n    }\r\n  };\r\n\r\n  deleteQuiz = () => {\r\n    if (window.confirm(\"Are you sure you want to delete the quiz?\")) {\r\n      quizAPI.deleteEntry(\"quizs\", this.state.selectedQuiz).then(() => {\r\n        alert(\"Quiz has been deleted.\");\r\n        this.props.hideTracks();\r\n        this.props.clearQuizTracks();\r\n      });\r\n    }\r\n  };\r\n\r\n  changeClipLength = value => {\r\n    this.setState({ clipLength: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <Form>\r\n            <FormGroup row>\r\n              <Label for=\"selectedQuiz\">Select Quiz</Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                id=\"selectedQuiz\"\r\n                onChange={this.handleFieldChange}\r\n                default={1}\r\n              >\r\n                {this.state.myQuizzes.map(quiz => {\r\n                  return (\r\n                    <option\r\n                      className=\"option-text\"\r\n                      value={quiz.id}\r\n                      key={quiz.id}\r\n                    >\r\n                      {quiz.quizName}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Input>\r\n            </FormGroup>\r\n            <Button onClick={this.showEditForm}>Edit this quiz.</Button>\r\n          </Form>\r\n        </Container>\r\n\r\n        {this.state.showEditForm && (\r\n          <Card>\r\n            <CardTitle tag=\"h3\">Quiz Editor</CardTitle>\r\n\r\n            <CardBody>\r\n              <Form>\r\n                <Row form>\r\n                  <Col md={4}>\r\n                    <FormGroup>\r\n                      <Label for=\"quizName\">Quiz Name</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"quizName\"\r\n                        id=\"quizName\"\r\n                        value={this.state.quizName}\r\n                        onChange={this.handleFieldChange}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={7}>\r\n                    <FormGroup>\r\n                      <Label for=\"quizDescription\">Quiz Description</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"text\"\r\n                        id=\"quizDescription\"\r\n                        onChange={this.handleFieldChange}\r\n                        value={this.state.quizDescription}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <RadioButtons changeClipLength={this.changeClipLength} />\r\n                </Row>\r\n                <FormGroup>\r\n                  <Label for=\"quizSongs\">Quiz Songs:</Label>\r\n                  <ListGroup id=\"quizSongs\">\r\n                    {this.state.newQuizTracks.map(track => {\r\n                      return (\r\n                        <QuizSongEditor\r\n                          key={track.id}\r\n                          addEditedTrack={this.addEditedTrack}\r\n                          track={track}\r\n                          clipLength={this.state.clipLength}\r\n                          removeTrack={this.removeTrack}\r\n                          addTrackToQuiz={this.addTrackToQuiz}\r\n                          deviceId={this.props.deviceId}\r\n                        />\r\n                      );\r\n                    })}\r\n                    {this.props.quizTracks.map(track => {\r\n                      return (\r\n                        <QuizSongCreator\r\n                          key={track.id}\r\n                          track={track}\r\n                          clipLength={this.state.clipLength}\r\n                          addTrackToQuiz={this.addTrackToQuiz}\r\n                          deviceId={this.props.deviceId}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </ListGroup>\r\n                </FormGroup>\r\n                <Button onClick={this.submitEditedQuiz}>\r\n                  Submit Edited Quiz\r\n                </Button>{\" \"}\r\n                <Button onClick={this.deleteQuiz}>Delete this quiz</Button>\r\n              </Form>\r\n            </CardBody>\r\n          </Card>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport API from \"../../modules/spotifyAPIManager\";\r\nimport UserPlaylists from \"./UserPlaylists\"\r\nimport { Dropdown, DropdownToggle, DropdownItem, DropdownMenu, Container, Button} from \"reactstrap\"\r\nimport \"./test.css\"\r\nimport QuizCreator from \"./QuizCreator\";\r\nimport QuizEditor from \"./QuizEditor\"\r\n\r\nexport default class Create extends Component {\r\n\r\n\r\n  state = {\r\n    playlistInfo: [],\r\n    dropdownOpen: false,\r\n    showTracks: false,\r\n    activePlaylist: \"\",\r\n    quizTracks: [],\r\n    renderQuizCreator: true,\r\n    renderQuizEditor: false\r\n  }\r\n\r\n\r\n\r\n    toggle = () => {\r\n      this.setState({\r\n        dropdownOpen: !this.state.dropdownOpen\r\n      });\r\n    }\r\n\r\n    toggleEditor = () => {\r\n      this.setState({\r\n        renderQuizCreator: !this.state.renderQuizCreator, \r\n        renderQuizEditor: !this.state.renderQuizEditor \r\n      });\r\n    };\r\n\r\n    \r\n  async componentDidMount () {\r\n     let items = await API.get.getUserPlaylists();\r\n      const playlistInfo = items.map(playlist => {\r\n        return { name: playlist.name, URI: playlist.id}\r\n      }); this.setState({playlistInfo: playlistInfo})\r\n     }\r\n\r\n    showTracks = (playlist, e) => {\r\n      this.setState({showTracks: true, activePlaylist: playlist})\r\n      this.toggle();\r\n    }\r\n\r\n    hideTracks = () => {\r\n      this.setState({showTracks: false})\r\n    }\r\n\r\n    addToQuiz = (trackURI) => {\r\n\r\n      const addTrackToState = this.state.quizTracks.concat(trackURI);\r\n      this.setState({quizTracks: addTrackToState})\r\n     } \r\n\r\n     removeFromQuiz = (trackURI) => {\r\n      const filteredQuiz = this.state.quizTracks.filter(quiz => {\r\n        return (quiz !== trackURI)\r\n      }); this.setState({quizTracks: filteredQuiz})\r\n     }\r\n\r\n    clearQuizTracks = () => {\r\n      this.setState({quizTracks: [], renderQuizEditor: false, renderQuizCreator: true})\r\n    }\r\n\r\n\r\n      render() {\r\n      const showPlaylist = this.state.showTracks  \r\n      return (\r\n        <Container className=\"App\">\r\n\r\n  <Button onClick={this.toggleEditor} id=\"renderQuizCreator\" color=\"primary\" size=\"lg\">Create a New Quiz</Button>{' '}\r\n  <Button onClick={this.toggleEditor} id=\"renderQuizEditor\" color=\"secondary\" size=\"lg\">Edit a previous quiz</Button>\r\n\r\n\r\n  {this.state.renderQuizCreator && <QuizCreator currentUser={this.props.currentUser} deviceId={this.props.deviceId} quizTracks={this.state.quizTracks} clearQuizTracks={this.clearQuizTracks} hideTracks={this.hideTracks}></QuizCreator>}\r\n\r\n  {this.state.renderQuizEditor && <QuizEditor deviceId={this.props.deviceId} quizTracks={this.state.quizTracks} clearQuizTracks={this.clearQuizTracks} hideTracks={this.hideTracks} removeFromQuiz={this.removeFromQuiz}\r\n  currentUser={this.props.currentUser}></QuizEditor>}\r\n\r\n\r\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n        <DropdownToggle caret>\r\n        Playlists\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {this.state.playlistInfo.map(playlist => {\r\n            let boundItemClick = this.showTracks.bind(this, playlist)\r\n            return ( \r\n              <DropdownItem key={playlist.URI} onClick={boundItemClick} >{playlist.name}\r\n              </DropdownItem>)\r\n          })}\r\n          </DropdownMenu>\r\n      </Dropdown>\r\n      {showPlaylist && <UserPlaylists addToQuiz={this.addToQuiz} removeFromQuiz={this.removeFromQuiz} playlist={this.state.activePlaylist}></UserPlaylists>}\r\n      \r\n\r\n\r\n        </Container>\r\n      );\r\n    }\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst isAuthenticated = () => {\r\n  if (localStorage.getItem(\"oauthio_cache\") !== null) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst AuthRoute = ({ path, Destination, ...superProps }) => {\r\n  return (\r\n    <Route\r\n      exact\r\n      path={path}\r\n      render={props => {\r\n        if (isAuthenticated()) {\r\n          return <Destination {...props} {...superProps} />;\r\n        } else {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Container,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Label,\r\nCol } from \"reactstrap\";\r\nimport quizAPI from \"../../modules/jsonAPIManager\"\r\n\r\n\r\nexport default class Profile extends Component {\r\n\r\n  state = {\r\n    inputName: \"\",\r\n    displayName: \"\"\r\n  }\r\n\r\n  componentDidMount() {\r\n    quizAPI.getOneEntry(\"users\", this.props.currentUser).then(user => {\r\n      this.setState({displayName: user.displayName})\r\n    })\r\n  }\r\n\r\n\r\n  handleFieldChange = event => {\r\n    const stateToChange = {}\r\n    stateToChange[event.target.id] = event.target.value\r\n    this.setState(stateToChange)\r\n  }\r\n\r\n    handleSubmit = event => {\r\n      let form = event.target.parentNode\r\n      quizAPI.patchEntry(\"users\", this.props.currentUser, {\"displayName\": this.state.inputName}).then(()=> {\r\n        quizAPI.getOneEntry(\"users\", this.props.currentUser).then(user => {\r\n          this.setState({displayName: user.displayName})\r\n          form.reset();\r\n      })\r\n\r\n    })}\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n      <h1>{this.state.displayName}'s Profile</h1>\r\n\r\n  <Form >\r\n  <FormGroup row>\r\n  <Label for=\"inputName\" sm={3}>Edit your display name:</Label>\r\n  <Col sm={9}>\r\n    <Input type=\"text\" onChange={this.handleFieldChange} name=\"text\" id=\"inputName\" />\r\n  </Col>\r\n  </FormGroup>\r\n  <Button onClick={this.handleSubmit}>Submit</Button>\r\n</Form>\r\n</Container>\r\n    )\r\n}\r\n}","import spotifyAPI from \"./spotifyAPIManager\"\r\n\r\n\r\nexport default {\r\n\r\n  async waitForSpotifyWebPlaybackSDKToLoad () {\r\n    return new Promise(resolve => {\r\n      if (window.Spotify) {\r\n        resolve(window.Spotify);\r\n      } else {\r\n        window.onSpotifyWebPlaybackSDKReady = () => {\r\n          resolve(window.Spotify);\r\n        };\r\n      }\r\n    });\r\n  },\r\n  \r\n  async sPlayer () {\r\n    const spotifyRequest = window.OAuth.create(\"spotify\");\r\n    const accessToken = await spotifyRequest.access_token;\r\n    const { Player } = await this.waitForSpotifyWebPlaybackSDKToLoad();\r\n    const sdk = new Player({\r\n      name: \"Quiz Player\",\r\n      volume: 1.0,\r\n      getOAuthToken: callback => { callback(accessToken); }\r\n    });\r\n    let connected = await sdk.connect();\r\n    if (connected) {\r\n      console.log(\"yeah\")\r\n    }       \r\n    sdk.addListener('ready', async ({ device_id }) => {\r\n    await spotifyAPI.put.transferPlayback(device_id)\r\n    const iframe = document.querySelector('iframe[src=\"https://sdk.scdn.co/embedded/index.html\"]');\r\n      if (iframe) {\r\n        iframe.style.display = 'block';\r\n        iframe.style.position = 'absolute';\r\n        iframe.style.top = '-1000px';\r\n        iframe.style.left = '-1000px';\r\n      }\r\n      console.log(\"ready\");\r\n    })\r\n    return sdk\r\n  }\r\n}","import { Route, Redirect } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport Home from \"./home/Home\";\r\nimport Login from \"./authentication/Login\";\r\nimport Create from \"./test/Create\";\r\nimport AuthRoute from \"./authentication/AuthRoute\";\r\nimport Quiz from \"./quiz/Quiz\";\r\nimport quizAPI from \"../modules/jsonAPIManager\";\r\nimport Profile from \"./profile/Profile\";\r\nimport playback from \"../modules/spotifyPlayback\"\r\n\r\n\r\nclass ApplicationViews extends Component {\r\n  state = {\r\n    access_token: \"\",\r\n    userLoggedIn: false,\r\n    currentUser: \"\",\r\n    deviceId: \"\",\r\n    users: []\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    quizAPI.getAll(\"users\").then(userArray => {\r\n      this.setState({ users: userArray });\r\n    });\r\n    if (\r\n      localStorage.getItem(\"oauthio_cache\") !== null &&\r\n      this.state.userLoggedIn === false\r\n    ) {\r\n        this.setLoginStatus(\r\n          true,\r\n          parseInt(sessionStorage.getItem(\"currentUser\"))\r\n        );\r\n      }\r\n    }\r\n\r\n\r\n  setLoginStatus = (status, id) => {\r\n    this.setState({ userLoggedIn: status, currentUser: id });\r\n\r\n    const spotifyRequest = window.OAuth.create(\"spotify\");\r\n    const accessToken = spotifyRequest.access_token;\r\n    sessionStorage.setItem(\"access_token\", accessToken);\r\n    this.setState({ access_token: accessToken });\r\n    playback.sPlayer().then(data => {\r\n      this.setState({player: data, deviceId: data._options.id}) \r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={props => {\r\n            if (this.state.userLoggedIn) {\r\n              return <Redirect to=\"/home\" />;\r\n            } else {\r\n              return <Redirect to=\"/login\" />;\r\n            }\r\n          }}\r\n        />\r\n        <AuthRoute\r\n          path=\"/home\"\r\n          Destination={Home}\r\n          userLoggedIn={this.state.userLoggedIn}\r\n          player={this.state.player}\r\n          access_token={this.state.access_token}\r\n          deviceId={this.state.deviceId}\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          render={() => {\r\n            return (\r\n              <Login\r\n                userLoggedIn={this.state.userLoggedIn}\r\n                setLoginStatus={this.setLoginStatus}\r\n                users={this.state.users}\r\n                currentUser={this.state.currentUser}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n        <AuthRoute\r\n          path=\"/create\"\r\n          Destination={Create}\r\n          access_token={this.state.access_token}\r\n          deviceId={this.state.deviceId}\r\n          currentUser={this.state.currentUser}\r\n          player={this.state.player}\r\n        />\r\n        <AuthRoute\r\n          path=\"/quiz\"\r\n          Destination={Quiz}\r\n          access_token={this.state.access_token}\r\n          deviceId={this.state.deviceId}\r\n          player={this.state.player}\r\n        />\r\n        <AuthRoute\r\n          path=\"/profile\"\r\n          Destination={Profile}\r\n          currentUser={this.state.currentUser}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApplicationViews;\r\n","import React, { Component } from \"react\"\r\nimport NavBar from \"./components/nav/NavBar\"\r\nimport ApplicationViews from \"./components/ApplicationViews\"\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <NavBar />\r\n                <ApplicationViews />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport \"./assets/css/blk-design-system.css\"\r\n\r\n\r\nReactDOM.render(  <Router>\r\n  <App />\r\n</Router>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}